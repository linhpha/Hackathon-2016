rsconnect::deployApp()
shiny::runApp()
install.packages("reshape2")
runApp()
attributes <- read.csv("C:/Users/Linh/Downloads/attributes(1).csv", stringsAsFactors=FALSE)
attributes <- read.csv("C:/Users/Linh/Downloads/attributes (1).csv", stringsAsFactors=FALSE)
View(attributes)
#Delete the first column
attributes <- attributes[, -1]
attributes$Category <- gsub("Dairy ", "Dairy", attributes$Category)
attributes$Category <- gsub("other ", "Others", attributes$Category)
attributes$Category <- gsub("Vegestable ", "Vegetables", attributes$Category)
attributes$Category <- gsub("Vegestable", "Vegetables", attributes$Category)
attributes$Category <- gsub("fruits", "Fruits", attributes$Category)
attributes$Category <- gsub("Potato", "Vegetables", attributes$Category)
attributes$Category <- gsub("Protein ", "Protein", attributes$Category)
#Rename column
colnames(attributes)[[1]] <- "Ingredients"
#Function to count the number of ingredients
count <- function(data) {
for (k in 1 : nrow(data)) {
countIngr <- vector()
m <- attributes[k,1]
for (i in 1: nrow(data))
n <- 0
for(j in 1 : ncol(data)) {
if(m == data[i,j]) {
n <- n + 1
}
}
countIngr[k] <- n
}
}
#Find the proportion of the ingredient
count <- function(data){
countIngre <- vector()
for( i in 1 : nrow(attributes)) {
countIngre[i] <- length(which(data == attributes[i,1]))/nrow(data)
}
countIngre
}
for(i in 1: 39){
countTotal <- count(dataSubset[[i]])
attributes <- cbind(attributes, countTotal)
colnames(attributes)[[2+i]] <- dataSubset[[i]][1,2]
}
dataSubset <- split(recipe, recipe$V1)
recipe <- read.csv("C:/Users/Linh/Desktop/foodrecipe/data/recipe.csv", stringsAsFactors=FALSE)
View(recipe)
recipe <- read.csv("C:/Users/Linh/Desktop/foodrecipe/data/recipe.csv", stringsAsFactors=FALSE)
#Create a list of unique countries in the dataset
dataSubset <- split(recipe, recipe$V1)
View(dataSubset)
View(dataSubset[[1]])
country
attributes <- read.csv("data/attributes.csv", stringsAsFactors = F)
attributes <- attributes[-1]
binding2 <- read.csv("data/binding2.csv", stringsAsFactors = F)
binding2 <- binding2[-1]
country <- colnames(attributes)[3:length(attributes)]
category.Prop <- read.csv("data/category.Prop.csv", stringsAsFactors = F)
category.Prop <- category.Prop[-1]
Num <- read.csv("data/Number-of-recipes.csv", stringsAsFactors=FALSE)
Num <- Num[, 2:3]
country
attributes <- read.csv("data/attributes (1).csv", stringsAsFactors = F)
country <- colnames(attributes)[3:length(attributes)]
v("C:/Users/Linh/Desktop/foodrecipe/data/recipe.csv", stringsAsFactors=FALSE)
recipe <- read.csV("C:/Users/Linh/Desktop/foodrecipe/data/recipe.csv", stringsAsFactors=FALSE)
attributes <- read.csv("C:/Users/Linh/Downloads/attributes (1).csv", stringsAsFactors=FALSE)
View(attributes)
country <- colnames(attributes)[3:length(attributes)]
View(country)
country
View(attributes)
attributes1 <- read.csv("data/attributes.csv", stringsAsFactors = F)
View(attributes1)
View(recipe)
View(recipe)
dataSubset[[1]][1,2]
View(dataSubset)[[1]]
View(dataSubset[[1]]
)
dataSubset[[1]][1,3]
country <- unique(recipe$V1)
country
recipe$V1 <- gsub("east_Asia ", "East-Asia", recipe$V1)
recipe$V1 <- gsub("east_Asia", "East-Asia", recipe$V1)
recipe$V1 <- gsub("American", "America", recipe$V1)
recipe$V1 <- gsub("western", "Western", recipe$V1)
recipe$V1 <- gsub("South-African", "South-Africa", recipe$V1)
country <- unique(recipe$V1)
country
recipe$V1 <- gsub("West-African", "West-Africa", recipe$V1)
country <- unique(recipe$V1)
country
dataSubset <- split(recipe, recipe$V1)
attributes <- read.csv("C:/Users/Linh/Downloads/attributes (1).csv", stringsAsFactors=FALSE)
View(attributes)
count <- function(data){
countIngre <- vector()
for( i in 1 : nrow(attributes)) {
countIngre[i] <- length(which(data == attributes[i,1]))/nrow(data)
}
countIngre
}
dataSubset[[1]][1m2]
dataSubset[[1]][1,2]
dataSubset[[1]][1,3]
for(i in 1: 39){
countTotal <- count(dataSubset[[i]])
attributes <- cbind(attributes, countTotal)
colnames(attributes)[[2+i]] <- dataSubset[[i]][1,3]
}
View(attributes)
attributes[1,1]
attributes[1,2]
attributes <- attributes[, 1:2]
count <- function(data){
countIngre <- vector()
for( i in 1 : nrow(attributes)) {
countIngre[i] <- length(which(data == attributes[i,2]))/nrow(data)
}
countIngre
}
count <- function(data){
countIngre <- vector()
for( i in 1 : nrow(attributes)) {
countIngre[i] <- length(which(data == attributes[i,2]))/nrow(data)
}
countIngre
}
for(i in 1: 39){
countTotal <- count(dataSubset[[i]])
attributes <- cbind(attributes, countTotal)
colnames(attributes)[[2+i]] <- dataSubset[[i]][1,3]
}
View(attributes)
ncol(attributes)
colMax <- function(data ) {
colMax = 1
while (data[1,colMax] != "") {
colMax = colMax + 1
}
colMax - 1
}
for(i in 1: 39) {
dataSubset[[i]][is.na(dataSubset[[i]])] <- ""
}
dataSubset[[1]]$V32 <- ""
dataSubset[[1]]$V32
applyFunction <- function(data){
z <- data.frame(country = data[1, 2], id = data[1, 1], ingredient = as.character(data[1, c(3:colMax(data[1,]))]))
for( i in 2 : nrow(data)) {
a <- data.frame(country = data[i, 2], id = data[i, 1], ingredient = as.character(data[i, c(3:colMax(data[i,]))]))
z <- rbind(z,a)
}
z
}
out <- list()
for( i in 2: 39){
out[[i]] <- applyFunction(dataSubset[[i]])
}
