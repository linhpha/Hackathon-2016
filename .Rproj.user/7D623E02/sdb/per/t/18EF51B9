{
    "collab_server" : "",
    "contents" : "\n#Hackathon 10.8\n\nrecipe <- read.csV(\"C:/Users/Linh/Desktop/foodrecipe/data/recipe.csv\", stringsAsFactors=FALSE)\n\nrecipe$V1 <- gsub(\"east_Asia\", \"East-Asia\", recipe$V1)\nrecipe$V1 <- gsub(\"American\", \"America\", recipe$V1)\nrecipe$V1 <- gsub(\"western\", \"Western\", recipe$V1)\nrecipe$V1 <- gsub(\"South-African\", \"South-Africa\", recipe$V1)\nrecipe$V1 <- gsub(\"West-African\", \"West-Africa\", recipe$V1)\n\n\n#Create a list of unique countries in the dataset\ncountry <- unique(recipe$V1)\ncountry <- as.matrix(country)\ndataSubset <- data.frame()\n\n#Split dataset based on the name of the country\n\ndataSubset <- split(recipe, recipe$V1)  \n\n\n#Get the list of ingredients\nx <- recipe[, -1]\nx <- x[, -1]\nView(x)\ny <- as.matrix(unique(unlist(x)))\ny\n\n\n#find the number of columns\n\ncolMax <- function(data ) {\n  colMax = 1\n  while (data[1,colMax] != \"\") {\n    colMax = colMax + 1\n  }\n  colMax - 1\n}\n\n\n#Crete a list of data frame according to dataSubset\napplyFunction <- function(data){\n  z <- data.frame(country = data[1, 2], id = data[1, 1], ingredient = as.character(data[1, c(3:colMax(data[1,]))])) \n  for( i in 2 : nrow(data)) {\n    a <- data.frame(country = data[i, 2], id = data[i, 1], ingredient = as.character(data[i, c(3:colMax(data[i,]))]))\n    z <- rbind(z,a)\n  }\n  z\n}\n\n\n#Clean NA\nfor(i in 1: 39) {\ndataSubset[[i]][is.na(dataSubset[[i]])] <- \"\"\n}\ndataSubset[[1]]$V32 <- \"\"\n\n\n#Code to create a list of data frame of ID and ingredients\nout <- list()\nfor( i in 2: 39){\n  out[[i]] <- applyFunction(dataSubset[[i]])\n}\n#divide out[[1]] into 10 small trunks\nfun1 <- applyFunction(dataSubset[[1]][1:5000,])\nfun2 <- applyFunction(dataSubset[[1]][5001:10000,])\nfun3 <- applyFunction(dataSubset[[1]][10001:15000,])\nfun4 <- applyFunction(dataSubset[[1]][15001:16000,])\nfun5 <- applyFunction(dataSubset[[1]][16001:17000,])\nfun6 <- applyFunction(dataSubset[[1]][17001:18000,])\nfun7 <- applyFunction(dataSubset[[1]][18001:19000,])\nfun8 <- applyFunction(dataSubset[[1]][19001:25000,])\nfun9 <- applyFunction(dataSubset[[1]][25001:30000,])\nfun10 <- applyFunction(dataSubset[[1]][30001:35162,])\n\nn <- rbind(fun1, fun2)\nn <- rbind(n, fun3)\nn <- rbind(n, fun4)\nn <- rbind(n, fun5)\nn <- rbind(n, fun6)\nn <- rbind(n, fun7)\nn <- rbind(n, fun8)\nn <- rbind(n, fun9)\nn <- rbind(n, fun10)\nout[[1]] <- n\n\n#Merge 2 subset into each other\ncombo <- list()\nfor(i in 2:39){\n  combo[[i]] <- subset(merge(out[[i]], out[[i]], by.x = \"id\", by.y = \"id\"), ingredient.x != ingredient.y)\n}\ncombo[[1]] <- subset(merge(out[[1]], out[[1]], by.x = \"id\", by.y = \"id\"), ingredient.x != ingredient.y)\n\n\n#Calculate frequency\nedgelist <- list()\nfor(i in 1:39) {\n  edgelist[[i]] <- aggregate(id~., combo[[i]], function(x)length(unique(x)))\n}\n\n\n#Combine edgelist\n\nbinding <- do.call(\"rbind\", edgelist)\n\n\n#Attribute file\n\nattributes <- read.csv(\"C:/Users/Linh/Downloads/attributes (1).csv\", stringsAsFactors=FALSE)\n#Delete the first column\nattributes <- attributes[, -1]\nattributes$Category <- gsub(\"Dairy \", \"Dairy\", attributes$Category)\nattributes$Category <- gsub(\"other \", \"Others\", attributes$Category)\nattributes$Category <- gsub(\"Vegestable \", \"Vegetables\", attributes$Category)\nattributes$Category <- gsub(\"Vegestable\", \"Vegetables\", attributes$Category)\nattributes$Category <- gsub(\"fruits\", \"Fruits\", attributes$Category)\nattributes$Category <- gsub(\"Potato\", \"Vegetables\", attributes$Category)\nattributes$Category <- gsub(\"Protein \", \"Protein\", attributes$Category)\n#Rename column\ncolnames(attributes)[[1]] <- \"Ingredients\"\n\n\n#Function to count the number of ingredients\n\n\ncount <- function(data) {\n  for (k in 1 : nrow(data)) {\n    countIngr <- vector()\n    m <- attributes[k,1]\n    for (i in 1: nrow(data))\n      n <- 0\n    for(j in 1 : ncol(data)) {\n      if(m == data[i,j]) {\n        n <- n + 1\n      }\n    }\n    countIngr[k] <- n\n  }\n}\n\n\n#Find the proportion of the ingredient\ncount <- function(data){\n  countIngre <- vector()\n  for( i in 1 : nrow(attributes)) {\n    countIngre[i] <- length(which(data == attributes[i,2]))/nrow(data)\n  }\n  countIngre\n}\n\nfor(i in 1: 39){\n  countTotal <- count(dataSubset[[i]])\n  attributes <- cbind(attributes, countTotal)\n  colnames(attributes)[[2+i]] <- dataSubset[[i]][1,3]\n}\n\n\n",
    "created" : 1477088310094.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1985063170",
    "id" : "18EF51B9",
    "lastKnownWriteTime" : 1477090764,
    "last_content_update" : 1477090764347,
    "path" : "~/Hackathon/Other/Code_10.8.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}